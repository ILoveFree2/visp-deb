From: Thomas Moulard <thomas.moulard@gmail.com>
Date: Mon, 20 May 2013 16:50:17 +0900
Subject: Fix CMake files to support multiarch.

Fix CMake files to support multiarch.

Origin: upstream, private communication.
Author: Fabien Spindler <fabien.spindler@inria.fr>
---
 CMakeLists.txt                   | 31 +++++++++++--------------------
 CMakeModules/VISPConfig.cmake.in |  3 ---
 distclean.sh                     |  1 -
 3 files changed, 11 insertions(+), 24 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 78f649b..591470e 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1952,9 +1952,10 @@ ADD_CUSTOM_TARGET(uninstall
 
 set(VISP_ROOT_DIR_CONFIGCMAKE "${VISP_BINARY_DIR}")
 set(VISP_ROOT_DIR_CMAKE_CONFIGCMAKE "${VISP_BINARY_DIR}")
+set(VISP_ROOT_DIR_DATA_CONFIGCMAKE "${VISP_BINARY_DIR}")
 
-SET(VISP_SCENES_DIR ${VISP_ROOT_DIR_CMAKE_CONFIGCMAKE}/data/wireframe-simulator)
-SET(VISP_ROBOT_ARMS_DIR ${VISP_ROOT_DIR_CMAKE_CONFIGCMAKE}/data/robot-simulator)
+SET(VISP_SCENES_DIR ${VISP_ROOT_DIR_DATA_CONFIGCMAKE}/data/wireframe-simulator)
+SET(VISP_ROBOT_ARMS_DIR ${VISP_ROOT_DIR_DATA_CONFIGCMAKE}/data/robot-simulator)
     
 # Generate the package dependent file include/visp/vpConfig.h
 CONFIGURE_FILE(${VISP_SOURCE_DIR}/include/vpConfig.h.cmake
@@ -1972,12 +1973,6 @@ CONFIGURE_FILE(
   ${VISP_BINARY_DIR}/VISPUse.cmake
   IMMEDIATE @ONLY)
 
-# Export our library dependencies for use by the third party
-# user projects
-EXPORT_LIBRARY_DEPENDENCIES(
-  ${VISP_BINARY_DIR}/VISPLibraryDepends.cmake
-  )
-
 # Generate the package dependent file include/visp/vpConfig.h
 CONFIGURE_FILE(${VISP_SOURCE_DIR}/ViSP-third-party.txt.cmake
   ${VISP_BINARY_DIR}/ViSP-third-party.txt
@@ -1989,20 +1984,22 @@ CONFIGURE_FILE(${VISP_SOURCE_DIR}/ViSP-third-party.txt.cmake
 
 set(VISP_ROOT_DIR_CONFIGCMAKE "${CMAKE_INSTALL_PREFIX}")
 IF(UNIX)
-  set(VISP_ROOT_DIR_CMAKE_CONFIGCMAKE "${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATAROOTDIR}/visp")
+  set(VISP_ROOT_DIR_CMAKE_CONFIGCMAKE "${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}/visp")
+  set(VISP_ROOT_DIR_DATA_CONFIGCMAKE "${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATAROOTDIR}/visp")
 ELSE()
   set(VISP_ROOT_DIR_CMAKE_CONFIGCMAKE "${CMAKE_INSTALL_PREFIX}")
+  set(VISP_ROOT_DIR_DATA_CONFIGCMAKE "${CMAKE_INSTALL_PREFIX}")
 ENDIF()
 
-SET(VISP_SCENES_DIR ${VISP_ROOT_DIR_CMAKE_CONFIGCMAKE}/data/wireframe-simulator)
-SET(VISP_ROBOT_ARMS_DIR ${VISP_ROOT_DIR_CMAKE_CONFIGCMAKE}/data/robot-simulator)
+SET(VISP_SCENES_DIR ${VISP_ROOT_DIR_DATA_CONFIGCMAKE}/data/wireframe-simulator)
+SET(VISP_ROBOT_ARMS_DIR ${VISP_ROOT_DIR_DATA_CONFIGCMAKE}/data/robot-simulator)
 # Only if resources.cfg created by hand, we change the path to resources.cfg in install/vpConfig.h
 if(VISP_INSTALL_DIR_OGRE_RESOURCES)
-  SET(VISP_HAVE_OGRE_RESOURCES_PATH ${VISP_ROOT_DIR_CMAKE_CONFIGCMAKE}/data/ogre-simulator)
+  SET(VISP_HAVE_OGRE_RESOURCES_PATH ${VISP_ROOT_DIR_DATA_CONFIGCMAKE}/data/ogre-simulator)
 endif()
 # Only if plugins.cfg created by hand, we change the path to plugins.cfg in install/vpConfig.h
 if(VISP_INSTALL_DIR_OGRE_RESOURCES)
-  SET(VISP_HAVE_OGRE_PLUGINS_PATH ${VISP_ROOT_DIR_CMAKE_CONFIGCMAKE}/data/ogre-simulator)
+  SET(VISP_HAVE_OGRE_PLUGINS_PATH ${VISP_ROOT_DIR_DATA_CONFIGCMAKE}/data/ogre-simulator)
 endif()
 
 # Generate the package dependent file include/visp/vpConfig.h
@@ -2027,9 +2024,6 @@ INCLUDE(${CMAKE_ROOT}/Modules/CMakeExportBuildSettings.cmake)
 CMAKE_EXPORT_BUILD_SETTINGS(
   ${VISP_BINARY_DIR}/install/VISPBuildSettings.cmake
   )
-EXPORT_LIBRARY_DEPENDENCIES(
-  ${VISP_BINARY_DIR}/install/VISPLibraryDepends.cmake
-  )
 
 # Install vpConfig.h that may differ from the one in include/visp
 INSTALL(FILES ${VISP_BINARY_DIR}/install/vpConfig.h
@@ -2068,9 +2062,7 @@ IF(UNIX)
     ${VISP_BINARY_DIR}/install/VISPUse.cmake
     ${VISP_BINARY_DIR}/install/VISPConfig.cmake
     ${VISP_BINARY_DIR}/install/VISPBuildSettings.cmake
-    ${VISP_BINARY_DIR}/install/VISPLibraryDepends.cmake
-    ${VISP_BINARY_DIR}/ViSP-third-party.txt
-    DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/visp
+    DESTINATION ${CMAKE_INSTALL_LIBDIR}/visp
     PERMISSIONS OWNER_READ GROUP_READ WORLD_READ OWNER_WRITE
     COMPONENT libraries
   )
@@ -2095,7 +2087,6 @@ ELSE()
     ${VISP_BINARY_DIR}/install/VISPUse.cmake
     ${VISP_BINARY_DIR}/install/VISPConfig.cmake
     ${VISP_BINARY_DIR}/install/VISPBuildSettings.cmake
-    ${VISP_BINARY_DIR}/install/VISPLibraryDepends.cmake
     DESTINATION .
     PERMISSIONS OWNER_READ GROUP_READ WORLD_READ OWNER_WRITE
     COMPONENT libraries
diff --git a/CMakeModules/VISPConfig.cmake.in b/CMakeModules/VISPConfig.cmake.in
index 2030583..1daa493 100644
--- a/CMakeModules/VISPConfig.cmake.in
+++ b/CMakeModules/VISPConfig.cmake.in
@@ -103,9 +103,6 @@ FOREACH(val ${VISP_EXTERN_LINK_DIR})
 ENDFOREACH(val ${VISP_EXTERN_LINK_DIR})
 #MESSAGE("VISP_LIBRARY_DIRS: ${VISP_LIBRARY_DIRS}")
 
-# Tell the user project where to find ViSP dependencies
-INCLUDE("${VISP_ROOT_DIR_CMAKE}/VISPLibraryDepends.cmake")
-
 # export source dir for doxygen eventually
 SET(VISP_SOURCE_DIR "@VISP_SOURCE_DIR@")
 
diff --git a/distclean.sh b/distclean.sh
index 9283449..cf5bc40 100755
--- a/distclean.sh
+++ b/distclean.sh
@@ -48,7 +48,6 @@ $RM doc/config-doxygen warning.log cmake_uninstall.cmake
 $RM include/visp/vpConfig.h
 $RM VISPBuildSettings.cmake
 $RM VISPConfig.cmake
-$RM VISPLibraryDepends.cmake
 $RM VISPUse.cmake
 $RM bin/visp-config
 
